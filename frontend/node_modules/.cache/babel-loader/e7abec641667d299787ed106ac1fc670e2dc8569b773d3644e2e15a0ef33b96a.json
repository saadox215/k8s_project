{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prayers, setPrayers] = useState(null);\n  const [allCities, setAllCities] = useState([]);\n  const [selectedCityId, setSelectedCityId] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n  const fetchCities = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetch(\"http://127.0.0.1:50106/api/prayers\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch prayer times\");\n      }\n      return res.json();\n    }).then(data => {\n      if (Array.isArray(data) && data.length > 0) {\n        // Extract unique cities from the prayer data\n        const uniqueCities = data.reduce((acc, prayer) => {\n          const cityExists = acc.some(city => city.id === prayer.id && city.city === prayer.city);\n          if (!cityExists) {\n            acc.push({\n              id: prayer.id,\n              city: prayer.city,\n              country: prayer.country\n            });\n          }\n          return acc;\n        }, []);\n        setAllCities(uniqueCities);\n\n        // Set the first city as default if no city is selected\n        if (!selectedCityId && uniqueCities.length > 0) {\n          setSelectedCityId(uniqueCities[0].id);\n          fetchPrayerTimesForCity(uniqueCities[0].id);\n        } else {\n          fetchPrayerTimesForCity(selectedCityId);\n        }\n      } else {\n        throw new Error(\"No prayer data available\");\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, [selectedCityId]); // Include selectedCityId in dependencies\n\n  // Fetch all prayers (fallback if cities endpoint fails)\n  const fetchAllPrayers = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetch(\"http://127.0.0.1:50106/api/prayers\").then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times');\n      }\n      return res.json();\n    }).then(data => {\n      if (Array.isArray(data) && data.length > 0) {\n        const prayerData = data[0];\n        const formattedPrayers = {\n          city: prayerData.city,\n          country: prayerData.country,\n          prayers: {\n            Fajr: formatTime(prayerData.fajr),\n            Dhuhr: formatTime(prayerData.dhuhr),\n            Asr: formatTime(prayerData.asr),\n            Maghrib: formatTime(prayerData.maghrib),\n            Isha: formatTime(prayerData.isha)\n          }\n        };\n        setPrayers(formattedPrayers);\n        determineActiveTime(formattedPrayers.prayers);\n        startCountdown(formattedPrayers.prayers.Maghrib);\n      } else {\n        throw new Error(\"No prayer data available\");\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n\n  // Fetch prayer times for a specific city\n  const fetchPrayerTimesForCity = useCallback(cityId => {\n    if (!cityId) return;\n    setLoading(true);\n    setError(null);\n    fetch(`http://127.0.0.1:50106/api/prayers/${cityId}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times for this city');\n      }\n      return res.json();\n    }).then(prayerData => {\n      if (prayerData) {\n        const formattedPrayers = {\n          city: prayerData.city,\n          country: prayerData.country,\n          prayers: {\n            Fajr: formatTime(prayerData.fajr),\n            Dhuhr: formatTime(prayerData.dhuhr),\n            Asr: formatTime(prayerData.asr),\n            Maghrib: formatTime(prayerData.maghrib),\n            Isha: formatTime(prayerData.isha)\n          }\n        };\n        setPrayers(formattedPrayers);\n        determineActiveTime(formattedPrayers.prayers);\n        startCountdown(formattedPrayers.prayers.Maghrib);\n      } else {\n        throw new Error(\"Invalid data format received\");\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    fetchCities();\n    document.body.className = theme;\n    return () => {\n      document.body.className = \"\";\n    };\n  }, [theme, fetchCities]); // Added fetchCities as a dependency\n\n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = timeString => {\n    if (!timeString) return \"\";\n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    return timeString;\n  };\n  const determineActiveTime = prayerTimes => {\n    if (!prayerTimes) return;\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    let nextPrayer = null;\n    let minDiff = Infinity;\n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      const prayerTime = hour * 60 + minute;\n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    setActiveTime(nextPrayer);\n  };\n  const startCountdown = iftarTime => {\n    if (!iftarTime) return;\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      iftar.setHours(hour, minute, 0, 0);\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff / (1000 * 60) % 60);\n        const seconds = Math.floor(diff / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  };\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  const refreshData = () => {\n    fetchCities();\n  };\n\n  // Modify the handlePrayerAdded function to ensure proper refresh\n  const handlePrayerAdded = () => {\n    setShowForm(false); // Hide the form\n\n    // Add a small delay to ensure the backend has updated\n    setTimeout(() => {\n      fetchCities(); // Refresh the cities list\n    }, 500);\n  };\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  // Handle city selection change\n  const handleCityChange = e => {\n    const cityId = parseInt(e.target.value);\n    setSelectedCityId(cityId);\n    fetchPrayerTimesForCity(cityId);\n  };\n  if (loading && !prayers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !prayers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshData,\n        className: \"refresh-btn\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ramadan Prayer Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleForm,\n          className: \"form-toggle-btn\",\n          children: showForm ? \"Hide Form\" : \"Add Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          className: \"refresh-btn\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-btn\",\n          children: theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: /*#__PURE__*/_jsxDEV(PrayerForm, {\n        onPrayerAdded: handlePrayerAdded,\n        onCancel: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this), allCities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city-select\",\n        children: \"Select City: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"city-select\",\n        value: selectedCityId || \"\",\n        onChange: handleCityChange,\n        className: \"city-dropdown\",\n        children: allCities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city.id,\n          children: [city.city, \", \", city.country]\n        }, city.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), prayers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [prayers.city, \", \", prayers.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iftar-countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Time until Iftar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-display\",\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prayer-times-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prayer-times\",\n          children: prayers && prayers.prayers && Object.entries(prayers.prayers).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `prayer-time-card ${name === activeTime ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-time\",\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 21\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ramadan Mubarak! \\uD83C\\uDF19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5kx+hUyxbZXlmPy5UfBAbgMJx+k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","PrayerForm","jsxDEV","_jsxDEV","App","_s","prayers","setPrayers","allCities","setAllCities","selectedCityId","setSelectedCityId","timeLeft","setTimeLeft","activeTime","setActiveTime","loading","setLoading","error","setError","theme","setTheme","showForm","setShowForm","fetchCities","fetch","then","res","ok","Error","json","data","Array","isArray","length","uniqueCities","reduce","acc","prayer","cityExists","some","city","id","push","country","fetchPrayerTimesForCity","catch","err","console","message","fetchAllPrayers","prayerData","formattedPrayers","Fajr","formatTime","fajr","Dhuhr","dhuhr","Asr","asr","Maghrib","maghrib","Isha","isha","determineActiveTime","startCountdown","cityId","document","body","className","timeString","includes","parts","split","prayerTimes","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","nextPrayer","minDiff","Infinity","name","time","Object","entries","hour","minute","map","Number","isNaN","prayerTime","diff","iftarTime","interval","setInterval","iftar","clearInterval","setHours","hours","Math","floor","minutes","seconds","toggleTheme","refreshData","handlePrayerAdded","setTimeout","toggleForm","handleCityChange","e","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onPrayerAdded","onCancel","htmlFor","onChange","toLocaleDateString","weekday","year","month","day","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\n\nfunction App() {\n  const [prayers, setPrayers] = useState(null);\n  const [allCities, setAllCities] = useState([]);\n  const [selectedCityId, setSelectedCityId] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n\n  const fetchCities = useCallback(() => {\n    setLoading(true);\n    setError(null);\n  \n    fetch(\"http://127.0.0.1:50106/api/prayers\")\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch prayer times\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (Array.isArray(data) && data.length > 0) {\n          // Extract unique cities from the prayer data\n          const uniqueCities = data.reduce((acc, prayer) => {\n            const cityExists = acc.some(\n              (city) => city.id === prayer.id && city.city === prayer.city\n            );\n            if (!cityExists) {\n              acc.push({\n                id: prayer.id,\n                city: prayer.city,\n                country: prayer.country,\n              });\n            }\n            return acc;\n          }, []);\n  \n          setAllCities(uniqueCities);\n  \n          // Set the first city as default if no city is selected\n          if (!selectedCityId && uniqueCities.length > 0) {\n            setSelectedCityId(uniqueCities[0].id);\n            fetchPrayerTimesForCity(uniqueCities[0].id);\n          } else {\n            fetchPrayerTimesForCity(selectedCityId);\n          }\n        } else {\n          throw new Error(\"No prayer data available\");\n        }\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.error(\"API Error:\", err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, [selectedCityId]); // Include selectedCityId in dependencies\n\n  // Fetch all prayers (fallback if cities endpoint fails)\n  const fetchAllPrayers = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    \n    fetch(\"http://127.0.0.1:50106/api/prayers\")\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch prayer times');\n        }\n        return res.json();\n      })\n      .then(data => {\n        if (Array.isArray(data) && data.length > 0) {\n          const prayerData = data[0];\n          \n          const formattedPrayers = {\n            city: prayerData.city,\n            country: prayerData.country,\n            prayers: {\n              Fajr: formatTime(prayerData.fajr),\n              Dhuhr: formatTime(prayerData.dhuhr),\n              Asr: formatTime(prayerData.asr),\n              Maghrib: formatTime(prayerData.maghrib),\n              Isha: formatTime(prayerData.isha)\n            }\n          };\n          \n          setPrayers(formattedPrayers);\n          determineActiveTime(formattedPrayers.prayers);\n          startCountdown(formattedPrayers.prayers.Maghrib);\n        } else {\n          throw new Error(\"No prayer data available\");\n        }\n        \n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"API Error:\", err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n  \n  // Fetch prayer times for a specific city\n  const fetchPrayerTimesForCity = useCallback((cityId) => {\n    if (!cityId) return;\n    \n    setLoading(true);\n    setError(null);\n    \n    fetch(`http://127.0.0.1:50106/api/prayers/${cityId}`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch prayer times for this city');\n        }\n        return res.json();\n      })\n      .then(prayerData => {\n        if (prayerData) {\n          const formattedPrayers = {\n            city: prayerData.city,\n            country: prayerData.country,\n            prayers: {\n              Fajr: formatTime(prayerData.fajr),\n              Dhuhr: formatTime(prayerData.dhuhr),\n              Asr: formatTime(prayerData.asr),\n              Maghrib: formatTime(prayerData.maghrib),\n              Isha: formatTime(prayerData.isha)\n            }\n          };\n          \n          setPrayers(formattedPrayers);\n          determineActiveTime(formattedPrayers.prayers);\n          startCountdown(formattedPrayers.prayers.Maghrib);\n        } else {\n          throw new Error(\"Invalid data format received\");\n        }\n        \n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"API Error:\", err);\n        setError(err.message);\n        setLoading(false);\n      });\n  }, []);\n  \n  useEffect(() => {\n    fetchCities();\n    \n    document.body.className = theme;\n    \n    return () => {\n      document.body.className = \"\";\n    };\n  }, [theme, fetchCities]); // Added fetchCities as a dependency\n  \n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = (timeString) => {\n    if (!timeString) return \"\";\n    \n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    \n    return timeString;\n  };\n\n  const determineActiveTime = (prayerTimes) => {\n    if (!prayerTimes) return;\n    \n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    \n    let nextPrayer = null;\n    let minDiff = Infinity;\n    \n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      \n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      \n      const prayerTime = hour * 60 + minute;\n      \n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      \n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    \n    setActiveTime(nextPrayer);\n  };\n\n  const startCountdown = (iftarTime) => {\n    if (!iftarTime) return;\n    \n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      \n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      \n      iftar.setHours(hour, minute, 0, 0);\n\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor((diff / (1000 * 60)) % 60);\n        const seconds = Math.floor((diff / 1000) % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    \n    return () => clearInterval(interval);\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const refreshData = () => {\n    fetchCities();\n  };\n\n // Modify the handlePrayerAdded function to ensure proper refresh\nconst handlePrayerAdded = () => {\n  setShowForm(false); // Hide the form\n  \n  // Add a small delay to ensure the backend has updated\n  setTimeout(() => {\n    fetchCities(); // Refresh the cities list\n  }, 500);\n};\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  // Handle city selection change\n  const handleCityChange = (e) => {\n    const cityId = parseInt(e.target.value);\n    setSelectedCityId(cityId);\n    fetchPrayerTimesForCity(cityId);\n  };\n\n  if (loading && !prayers) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loader\"></div>\n        <p>Loading prayer times...</p>\n      </div>\n    );\n  }\n\n  if (error && !prayers) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={refreshData} className=\"refresh-btn\">Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`app-container ${theme}`}>\n      <header>\n        <h1>Ramadan Prayer Times</h1>\n        <div className=\"header-actions\">\n          <button onClick={toggleForm} className=\"form-toggle-btn\">\n            {showForm ? \"Hide Form\" : \"Add Prayer Times\"}\n          </button>\n          <button onClick={refreshData} className=\"refresh-btn\">Refresh</button>\n          <button onClick={toggleTheme} className=\"theme-btn\">\n            {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </button>\n        </div>\n      </header>\n      \n      {/* Prayer Form */}\n      {showForm && (\n        <div className=\"form-section\">\n          <PrayerForm\n            onPrayerAdded={handlePrayerAdded}\n            onCancel={() => setShowForm(false)}\n          />\n        </div>\n      )}\n      \n      {/* City Selection Dropdown */}\n      {allCities.length > 0 && (\n        <div className=\"city-selector\">\n          <label htmlFor=\"city-select\">Select City: </label>\n          <select \n            id=\"city-select\" \n            value={selectedCityId || \"\"} \n            onChange={handleCityChange}\n            className=\"city-dropdown\"\n          >\n            {allCities.map(city => (\n              <option key={city.id} value={city.id}>\n                {city.city}, {city.country}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n      \n      {prayers && (\n        <div className=\"content\">\n          <div className=\"location-info\">\n            <h2>{prayers.city}, {prayers.country}</h2>\n            <p className=\"date\">{new Date().toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>\n          </div>\n          \n          <div className=\"iftar-countdown\">\n            <h2>Time until Iftar</h2>\n            <div className=\"countdown-display\">{timeLeft}</div>\n          </div>\n          \n          <div className=\"prayer-times-container\">\n            <h2>Prayer Times</h2>\n            <div className=\"prayer-times\">\n              {prayers && prayers.prayers && (\n                Object.entries(prayers.prayers).map(([name, time]) => (\n                  <div key={name} className={`prayer-time-card ${name === activeTime ? \"active\" : \"\"}`}>\n                    <div className=\"prayer-name\">{name}</div>\n                    <div className=\"prayer-time\">{time}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          <footer>\n            <p>Ramadan Mubarak! 🌙</p>\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMyB,WAAW,GAAGxB,WAAW,CAAC,MAAM;IACpCiB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEdM,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1C;QACA,MAAMC,YAAY,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;UAChD,MAAMC,UAAU,GAAGF,GAAG,CAACG,IAAI,CACxBC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,IAAID,IAAI,CAACA,IAAI,KAAKH,MAAM,CAACG,IAC1D,CAAC;UACD,IAAI,CAACF,UAAU,EAAE;YACfF,GAAG,CAACM,IAAI,CAAC;cACPD,EAAE,EAAEJ,MAAM,CAACI,EAAE;cACbD,IAAI,EAAEH,MAAM,CAACG,IAAI;cACjBG,OAAO,EAAEN,MAAM,CAACM;YAClB,CAAC,CAAC;UACJ;UACA,OAAOP,GAAG;QACZ,CAAC,EAAE,EAAE,CAAC;QAEN5B,YAAY,CAAC0B,YAAY,CAAC;;QAE1B;QACA,IAAI,CAACzB,cAAc,IAAIyB,YAAY,CAACD,MAAM,GAAG,CAAC,EAAE;UAC9CvB,iBAAiB,CAACwB,YAAY,CAAC,CAAC,CAAC,CAACO,EAAE,CAAC;UACrCG,uBAAuB,CAACV,YAAY,CAAC,CAAC,CAAC,CAACO,EAAE,CAAC;QAC7C,CAAC,MAAM;UACLG,uBAAuB,CAACnC,cAAc,CAAC;QACzC;MACF,CAAC,MAAM;QACL,MAAM,IAAImB,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACD6B,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAAC9B,KAAK,CAAC,YAAY,EAAE6B,GAAG,CAAC;MAChC5B,QAAQ,CAAC4B,GAAG,CAACE,OAAO,CAAC;MACrBhC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtB;EACA,MAAMwC,eAAe,GAAGlD,WAAW,CAAC,MAAM;IACxCiB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEdM,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1C,MAAMiB,UAAU,GAAGpB,IAAI,CAAC,CAAC,CAAC;QAE1B,MAAMqB,gBAAgB,GAAG;UACvBX,IAAI,EAAEU,UAAU,CAACV,IAAI;UACrBG,OAAO,EAAEO,UAAU,CAACP,OAAO;UAC3BtC,OAAO,EAAE;YACP+C,IAAI,EAAEC,UAAU,CAACH,UAAU,CAACI,IAAI,CAAC;YACjCC,KAAK,EAAEF,UAAU,CAACH,UAAU,CAACM,KAAK,CAAC;YACnCC,GAAG,EAAEJ,UAAU,CAACH,UAAU,CAACQ,GAAG,CAAC;YAC/BC,OAAO,EAAEN,UAAU,CAACH,UAAU,CAACU,OAAO,CAAC;YACvCC,IAAI,EAAER,UAAU,CAACH,UAAU,CAACY,IAAI;UAClC;QACF,CAAC;QAEDxD,UAAU,CAAC6C,gBAAgB,CAAC;QAC5BY,mBAAmB,CAACZ,gBAAgB,CAAC9C,OAAO,CAAC;QAC7C2D,cAAc,CAACb,gBAAgB,CAAC9C,OAAO,CAACsD,OAAO,CAAC;MAClD,CAAC,MAAM;QACL,MAAM,IAAI/B,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACD6B,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAAC9B,KAAK,CAAC,YAAY,EAAE6B,GAAG,CAAC;MAChC5B,QAAQ,CAAC4B,GAAG,CAACE,OAAO,CAAC;MACrBhC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM4B,uBAAuB,GAAG7C,WAAW,CAAEkE,MAAM,IAAK;IACtD,IAAI,CAACA,MAAM,EAAE;IAEbjD,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEdM,KAAK,CAAC,sCAAsCyC,MAAM,EAAE,CAAC,CAClDxC,IAAI,CAACC,GAAG,IAAI;MACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACX,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;MAC/D;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAACyB,UAAU,IAAI;MAClB,IAAIA,UAAU,EAAE;QACd,MAAMC,gBAAgB,GAAG;UACvBX,IAAI,EAAEU,UAAU,CAACV,IAAI;UACrBG,OAAO,EAAEO,UAAU,CAACP,OAAO;UAC3BtC,OAAO,EAAE;YACP+C,IAAI,EAAEC,UAAU,CAACH,UAAU,CAACI,IAAI,CAAC;YACjCC,KAAK,EAAEF,UAAU,CAACH,UAAU,CAACM,KAAK,CAAC;YACnCC,GAAG,EAAEJ,UAAU,CAACH,UAAU,CAACQ,GAAG,CAAC;YAC/BC,OAAO,EAAEN,UAAU,CAACH,UAAU,CAACU,OAAO,CAAC;YACvCC,IAAI,EAAER,UAAU,CAACH,UAAU,CAACY,IAAI;UAClC;QACF,CAAC;QAEDxD,UAAU,CAAC6C,gBAAgB,CAAC;QAC5BY,mBAAmB,CAACZ,gBAAgB,CAAC9C,OAAO,CAAC;QAC7C2D,cAAc,CAACb,gBAAgB,CAAC9C,OAAO,CAACsD,OAAO,CAAC;MAClD,CAAC,MAAM;QACL,MAAM,IAAI/B,KAAK,CAAC,8BAA8B,CAAC;MACjD;MAEAZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACD6B,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAAC9B,KAAK,CAAC,YAAY,EAAE6B,GAAG,CAAC;MAChC5B,QAAQ,CAAC4B,GAAG,CAACE,OAAO,CAAC;MACrBhC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd0B,WAAW,CAAC,CAAC;IAEb2C,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGjD,KAAK;IAE/B,OAAO,MAAM;MACX+C,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,EAAE;IAC9B,CAAC;EACH,CAAC,EAAE,CAACjD,KAAK,EAAEI,WAAW,CAAC,CAAC,CAAC,CAAC;;EAE1B;EACA,MAAM8B,UAAU,GAAIgB,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,EAAE;IAE1B,IAAIA,UAAU,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC5B,MAAMC,KAAK,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC;MACnC,IAAID,KAAK,CAACtC,MAAM,IAAI,CAAC,EAAE;QACrB,OAAO,GAAGsC,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;MAClC;IACF;IAEA,OAAOF,UAAU;EACnB,CAAC;EAED,MAAMN,mBAAmB,GAAIU,WAAW,IAAK;IAC3C,IAAI,CAACA,WAAW,EAAE;IAElB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,WAAW,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;IAClC,MAAMC,aAAa,GAAGJ,GAAG,CAACK,UAAU,CAAC,CAAC;IACtC,MAAMC,WAAW,GAAGJ,WAAW,GAAG,EAAE,GAAGE,aAAa;IAEpD,IAAIG,UAAU,GAAG,IAAI;IACrB,IAAIC,OAAO,GAAGC,QAAQ;IAEtB,KAAK,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACd,WAAW,CAAC,EAAE;MACtD,IAAI,CAACY,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAEvC,MAAMd,KAAK,GAAGc,IAAI,CAACb,KAAK,CAAC,GAAG,CAAC;MAC7B,IAAID,KAAK,CAACtC,MAAM,GAAG,CAAC,EAAE;MAEtB,MAAM,CAACuD,IAAI,EAAEC,MAAM,CAAC,GAAGlB,KAAK,CAACmB,GAAG,CAACC,MAAM,CAAC;MACxC,IAAIC,KAAK,CAACJ,IAAI,CAAC,IAAII,KAAK,CAACH,MAAM,CAAC,EAAE;MAElC,MAAMI,UAAU,GAAGL,IAAI,GAAG,EAAE,GAAGC,MAAM;MAErC,IAAIK,IAAI,GAAGD,UAAU,GAAGb,WAAW;MACnC,IAAIc,IAAI,GAAG,CAAC,EAAE;QACZA,IAAI,IAAI,EAAE,GAAG,EAAE;MACjB;MAEA,IAAIA,IAAI,GAAGZ,OAAO,EAAE;QAClBA,OAAO,GAAGY,IAAI;QACdb,UAAU,GAAGG,IAAI;MACnB;IACF;IAEAtE,aAAa,CAACmE,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMjB,cAAc,GAAI+B,SAAS,IAAK;IACpC,IAAI,CAACA,SAAS,EAAE;IAEhB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMvB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMuB,KAAK,GAAG,IAAIvB,IAAI,CAAC,CAAC;MAExB,MAAMJ,KAAK,GAAGwB,SAAS,CAACvB,KAAK,CAAC,GAAG,CAAC;MAClC,IAAID,KAAK,CAACtC,MAAM,GAAG,CAAC,EAAE;QACpBrB,WAAW,CAAC,qBAAqB,CAAC;QAClCuF,aAAa,CAACH,QAAQ,CAAC;QACvB;MACF;MAEA,MAAM,CAACR,IAAI,EAAEC,MAAM,CAAC,GAAGlB,KAAK,CAACmB,GAAG,CAACC,MAAM,CAAC;MACxC,IAAIC,KAAK,CAACJ,IAAI,CAAC,IAAII,KAAK,CAACH,MAAM,CAAC,EAAE;QAChC7E,WAAW,CAAC,qBAAqB,CAAC;QAClCuF,aAAa,CAACH,QAAQ,CAAC;QACvB;MACF;MAEAE,KAAK,CAACE,QAAQ,CAACZ,IAAI,EAAEC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;MAElC,MAAMK,IAAI,GAAGI,KAAK,GAAGxB,GAAG;MACxB,IAAIoB,IAAI,IAAI,CAAC,EAAE;QACblF,WAAW,CAAC,aAAa,CAAC;QAC1BuF,aAAa,CAACH,QAAQ,CAAC;MACzB,CAAC,MAAM;QACL,MAAMK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACT,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACjD,MAAMU,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAET,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,GAAI,EAAE,CAAC;QACrD,MAAMW,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAET,IAAI,GAAG,IAAI,GAAI,EAAE,CAAC;QAC9ClF,WAAW,CAAC,GAAGyF,KAAK,KAAKG,OAAO,KAAKC,OAAO,GAAG,CAAC;MAClD;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMN,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBtF,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,MAAMwF,WAAW,GAAGA,CAAA,KAAM;IACxBpF,WAAW,CAAC,CAAC;EACf,CAAC;;EAEF;EACD,MAAMqF,iBAAiB,GAAGA,CAAA,KAAM;IAC9BtF,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;;IAEpB;IACAuF,UAAU,CAAC,MAAM;MACftF,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EACC;EACA,MAAMuF,UAAU,GAAGA,CAAA,KAAM;IACvBxF,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;;EAED;EACA,MAAM0F,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAM/C,MAAM,GAAGgD,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IACvCzG,iBAAiB,CAACuD,MAAM,CAAC;IACzBrB,uBAAuB,CAACqB,MAAM,CAAC;EACjC,CAAC;EAED,IAAIlD,OAAO,IAAI,CAACV,OAAO,EAAE;IACvB,oBACEH,OAAA;MAAKkE,SAAS,EAAC,mBAAmB;MAAAgD,QAAA,gBAChClH,OAAA;QAAKkE,SAAS,EAAC;MAAQ;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC9BtH,OAAA;QAAAkH,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEV;EAEA,IAAIvG,KAAK,IAAI,CAACZ,OAAO,EAAE;IACrB,oBACEH,OAAA;MAAKkE,SAAS,EAAC,iBAAiB;MAAAgD,QAAA,gBAC9BlH,OAAA;QAAAkH,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdtH,OAAA;QAAAkH,QAAA,EAAInG;MAAK;QAAAoG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdtH,OAAA;QAAQuH,OAAO,EAAEd,WAAY;QAACvC,SAAS,EAAC,aAAa;QAAAgD,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAEV;EAEA,oBACEtH,OAAA;IAAKkE,SAAS,EAAE,iBAAiBjD,KAAK,EAAG;IAAAiG,QAAA,gBACvClH,OAAA;MAAAkH,QAAA,gBACElH,OAAA;QAAAkH,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtH,OAAA;QAAKkE,SAAS,EAAC,gBAAgB;QAAAgD,QAAA,gBAC7BlH,OAAA;UAAQuH,OAAO,EAAEX,UAAW;UAAC1C,SAAS,EAAC,iBAAiB;UAAAgD,QAAA,EACrD/F,QAAQ,GAAG,WAAW,GAAG;QAAkB;UAAAgG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACTtH,OAAA;UAAQuH,OAAO,EAAEd,WAAY;UAACvC,SAAS,EAAC,aAAa;UAAAgD,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtEtH,OAAA;UAAQuH,OAAO,EAAEf,WAAY;UAACtC,SAAS,EAAC,WAAW;UAAAgD,QAAA,EAChDjG,KAAK,KAAK,OAAO,GAAG,WAAW,GAAG;QAAY;UAAAkG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAGRnG,QAAQ,iBACPnB,OAAA;MAAKkE,SAAS,EAAC,cAAc;MAAAgD,QAAA,eAC3BlH,OAAA,CAACF,UAAU;QACT0H,aAAa,EAAEd,iBAAkB;QACjCe,QAAQ,EAAEA,CAAA,KAAMrG,WAAW,CAAC,KAAK;MAAE;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,EAGAjH,SAAS,CAAC0B,MAAM,GAAG,CAAC,iBACnB/B,OAAA;MAAKkE,SAAS,EAAC,eAAe;MAAAgD,QAAA,gBAC5BlH,OAAA;QAAO0H,OAAO,EAAC,aAAa;QAAAR,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDtH,OAAA;QACEuC,EAAE,EAAC,aAAa;QAChB0E,KAAK,EAAE1G,cAAc,IAAI,EAAG;QAC5BoH,QAAQ,EAAEd,gBAAiB;QAC3B3C,SAAS,EAAC,eAAe;QAAAgD,QAAA,EAExB7G,SAAS,CAACmF,GAAG,CAAClD,IAAI,iBACjBtC,OAAA;UAAsBiH,KAAK,EAAE3E,IAAI,CAACC,EAAG;UAAA2E,QAAA,GAClC5E,IAAI,CAACA,IAAI,EAAC,IAAE,EAACA,IAAI,CAACG,OAAO;QAAA,GADfH,IAAI,CAACC,EAAE;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAnH,OAAO,iBACNH,OAAA;MAAKkE,SAAS,EAAC,SAAS;MAAAgD,QAAA,gBACtBlH,OAAA;QAAKkE,SAAS,EAAC,eAAe;QAAAgD,QAAA,gBAC5BlH,OAAA;UAAAkH,QAAA,GAAK/G,OAAO,CAACmC,IAAI,EAAC,IAAE,EAACnC,OAAO,CAACsC,OAAO;QAAA;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1CtH,OAAA;UAAGkE,SAAS,EAAC,MAAM;UAAAgD,QAAA,EAAE,IAAIzC,IAAI,CAAC,CAAC,CAACmD,kBAAkB,CAAC,OAAO,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEC,IAAI,EAAE,SAAS;YAAEC,KAAK,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAU,CAAC;QAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClI,CAAC,eAENtH,OAAA;QAAKkE,SAAS,EAAC,iBAAiB;QAAAgD,QAAA,gBAC9BlH,OAAA;UAAAkH,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBtH,OAAA;UAAKkE,SAAS,EAAC,mBAAmB;UAAAgD,QAAA,EAAEzG;QAAQ;UAAA0G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAENtH,OAAA;QAAKkE,SAAS,EAAC,wBAAwB;QAAAgD,QAAA,gBACrClH,OAAA;UAAAkH,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBtH,OAAA;UAAKkE,SAAS,EAAC,cAAc;UAAAgD,QAAA,EAC1B/G,OAAO,IAAIA,OAAO,CAACA,OAAO,IACzBiF,MAAM,CAACC,OAAO,CAAClF,OAAO,CAACA,OAAO,CAAC,CAACqF,GAAG,CAAC,CAAC,CAACN,IAAI,EAAEC,IAAI,CAAC,kBAC/CnF,OAAA;YAAgBkE,SAAS,EAAE,oBAAoBgB,IAAI,KAAKvE,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;YAAAuG,QAAA,gBACnFlH,OAAA;cAAKkE,SAAS,EAAC,aAAa;cAAAgD,QAAA,EAAEhC;YAAI;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzCtH,OAAA;cAAKkE,SAAS,EAAC,aAAa;cAAAgD,QAAA,EAAE/B;YAAI;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAFjCpC,IAAI;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGT,CACN;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENtH,OAAA;QAAAkH,QAAA,eACElH,OAAA;UAAAkH,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpH,EAAA,CAnXQD,GAAG;AAAAgI,EAAA,GAAHhI,GAAG;AAqXZ,eAAeA,GAAG;AAAC,IAAAgI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}