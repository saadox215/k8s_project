{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/prayers\").then(res => res.json()).then(data => {\n      setPrayers(data);\n      startCountdown(data.prayers.Maghrib);\n    });\n  }, []);\n  const startCountdown = iftarTime => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const [hour, minute] = iftarTime.split(\":\").map(Number);\n      iftar.setHours(hour, minute, 0, 0);\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff / (1000 * 60) % 60);\n        const seconds = Math.floor(diff / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      fontFamily: \"Arial\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ramadan Prayer Times\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), prayers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [prayers.city, \", \", prayers.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: Object.entries(prayers.prayers).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontSize: \"20px\",\n            margin: \"10px 0\"\n          },\n          children: [name, \": \", time]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Time left for Iftar: \", timeLeft]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"abdVVILhzVMdKVfjEpLbG9ojXg4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","prayers","setPrayers","timeLeft","setTimeLeft","fetch","then","res","json","data","startCountdown","Maghrib","iftarTime","interval","setInterval","now","Date","iftar","hour","minute","split","map","Number","setHours","diff","clearInterval","hours","Math","floor","minutes","seconds","style","textAlign","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","city","country","listStyle","padding","Object","entries","name","time","fontSize","margin","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/prayers\")\n      .then((res) => res.json())\n      .then((data) => {\n        setPrayers(data);\n        startCountdown(data.prayers.Maghrib);\n      });\n  }, []);\n\n  const startCountdown = (iftarTime) => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const [hour, minute] = iftarTime.split(\":\").map(Number);\n      iftar.setHours(hour, minute, 0, 0);\n\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor((diff / (1000 * 60)) % 60);\n        const seconds = Math.floor((diff / 1000) % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n  };\n\n  return (\n    <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\n      <h1>Ramadan Prayer Times</h1>\n      {prayers ? (\n        <>\n          <h2>{prayers.city}, {prayers.country}</h2>\n          <ul style={{ listStyle: \"none\", padding: 0 }}>\n            {Object.entries(prayers.prayers).map(([name, time]) => (\n              <li key={name} style={{ fontSize: \"20px\", margin: \"10px 0\" }}>\n                {name}: {time}\n              </li>\n            ))}\n          </ul>\n          <h2>Time left for Iftar: {timeLeft}</h2>\n        </>\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}