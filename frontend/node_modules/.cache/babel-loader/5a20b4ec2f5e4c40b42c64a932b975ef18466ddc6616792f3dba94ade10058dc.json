{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\nimport CitySelector from \"./CitySelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countdownInterval, setCountdownInterval] = useState(null);\n\n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = timeString => {\n    if (!timeString) return \"\";\n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    return timeString;\n  };\n  const determineActiveTime = prayerTimes => {\n    if (!prayerTimes) return;\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    let nextPrayer = null;\n    let minDiff = Infinity;\n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      const prayerTime = hour * 60 + minute;\n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    setActiveTime(nextPrayer);\n  };\n  const startCountdown = iftarTime => {\n    if (!iftarTime) return null;\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      iftar.setHours(hour, minute, 0, 0);\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff / (1000 * 60) % 60);\n        const seconds = Math.floor(diff / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    return interval;\n  };\n  const fetchPrayerTimesForCity = useCallback(cityId => {\n    setLoading(true);\n    setError(null);\n\n    // Clear previous countdown\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n      setCountdownInterval(null);\n    }\n    fetch(`http://localhost:5000/api/prayers/${cityId}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times');\n      }\n      return res.json();\n    }).then(prayerData => {\n      const formattedPrayers = {\n        id: prayerData.id,\n        city: prayerData.city,\n        country: prayerData.country,\n        prayers: {\n          Fajr: formatTime(prayerData.fajr),\n          Dhuhr: formatTime(prayerData.dhuhr),\n          Asr: formatTime(prayerData.asr),\n          Maghrib: formatTime(prayerData.maghrib),\n          Isha: formatTime(prayerData.isha)\n        }\n      };\n      setPrayers(formattedPrayers);\n      determineActiveTime(formattedPrayers.prayers);\n      const interval = startCountdown(formattedPrayers.prayers.Maghrib);\n      setCountdownInterval(interval);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [countdownInterval]);\n  useEffect(() => {\n    document.body.className = theme;\n    return () => {\n      document.body.className = \"\";\n      if (countdownInterval) {\n        clearInterval(countdownInterval);\n      }\n    };\n  }, [theme, countdownInterval]);\n\n  // When a city is selected, fetch its prayer times\n  useEffect(() => {\n    if (selectedCity && selectedCity.id) {\n      fetchPrayerTimesForCity(selectedCity.id);\n    }\n  }, [selectedCity, fetchPrayerTimesForCity]); // Added fetchPrayerTimesForCity to dependencies\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Handle form submission completion\n  const handlePrayerAdded = () => {\n    setShowForm(false); // Hide the form\n  };\n\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n  if (loading && !selectedCity) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !prayers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"refresh-btn\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ramadan Prayer Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleForm,\n          className: \"form-toggle-btn\",\n          children: showForm ? \"Hide Form\" : \"Add Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-btn\",\n          children: theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-selector-container\",\n      children: /*#__PURE__*/_jsxDEV(CitySelector, {\n        onSelectCity: setSelectedCity,\n        selectedCity: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: /*#__PURE__*/_jsxDEV(PrayerForm, {\n        onPrayerAdded: handlePrayerAdded,\n        onCancel: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), loading && selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), error && prayers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), prayers && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [prayers.city, \", \", prayers.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iftar-countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Time until Iftar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-display\",\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prayer-times-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prayer-times\",\n          children: prayers.prayers && Object.entries(prayers.prayers).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `prayer-time-card ${name === activeTime ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-time\",\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ramadan Mubarak! \\uD83C\\uDF19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tno7Q/nlRE17le6PUgyGXSy8l8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","PrayerForm","CitySelector","jsxDEV","_jsxDEV","App","_s","prayers","setPrayers","timeLeft","setTimeLeft","activeTime","setActiveTime","loading","setLoading","error","setError","theme","setTheme","showForm","setShowForm","selectedCity","setSelectedCity","countdownInterval","setCountdownInterval","formatTime","timeString","includes","parts","split","length","determineActiveTime","prayerTimes","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","nextPrayer","minDiff","Infinity","name","time","Object","entries","hour","minute","map","Number","isNaN","prayerTime","diff","startCountdown","iftarTime","interval","setInterval","iftar","clearInterval","setHours","hours","Math","floor","minutes","seconds","fetchPrayerTimesForCity","useCallback","cityId","fetch","then","res","ok","Error","json","prayerData","formattedPrayers","id","city","country","Fajr","fajr","Dhuhr","dhuhr","Asr","asr","Maghrib","maghrib","Isha","isha","catch","err","console","message","finally","document","body","className","toggleTheme","handlePrayerAdded","toggleForm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","onSelectCity","onPrayerAdded","onCancel","toLocaleDateString","weekday","year","month","day","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\nimport CitySelector from \"./CitySelector\";\n\nfunction App() {\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countdownInterval, setCountdownInterval] = useState(null);\n\n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = (timeString) => {\n    if (!timeString) return \"\";\n    \n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    \n    return timeString;\n  };\n\n  const determineActiveTime = (prayerTimes) => {\n    if (!prayerTimes) return;\n    \n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    \n    let nextPrayer = null;\n    let minDiff = Infinity;\n    \n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      \n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      \n      const prayerTime = hour * 60 + minute;\n      \n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      \n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    \n    setActiveTime(nextPrayer);\n  };\n\n  const startCountdown = (iftarTime) => {\n    if (!iftarTime) return null;\n    \n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      \n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      \n      iftar.setHours(hour, minute, 0, 0);\n\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor((diff / (1000 * 60)) % 60);\n        const seconds = Math.floor((diff / 1000) % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    \n    return interval;\n  };\n\n  const fetchPrayerTimesForCity = useCallback((cityId) => {\n    setLoading(true);\n    setError(null);\n    \n    // Clear previous countdown\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n      setCountdownInterval(null);\n    }\n    \n    fetch(`http://localhost:5000/api/prayers/${cityId}`)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch prayer times');\n        }\n        return res.json();\n      })\n      .then(prayerData => {\n        const formattedPrayers = {\n          id: prayerData.id,\n          city: prayerData.city,\n          country: prayerData.country,\n          prayers: {\n            Fajr: formatTime(prayerData.fajr),\n            Dhuhr: formatTime(prayerData.dhuhr),\n            Asr: formatTime(prayerData.asr),\n            Maghrib: formatTime(prayerData.maghrib),\n            Isha: formatTime(prayerData.isha)\n          }\n        };\n        \n        setPrayers(formattedPrayers);\n        determineActiveTime(formattedPrayers.prayers);\n        const interval = startCountdown(formattedPrayers.prayers.Maghrib);\n        setCountdownInterval(interval);\n      })\n      .catch(err => {\n        console.error(\"API Error:\", err);\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [countdownInterval]);\n  useEffect(() => {\n    document.body.className = theme;\n    \n    return () => {\n      document.body.className = \"\";\n      if (countdownInterval) {\n        clearInterval(countdownInterval);\n      }\n    };\n  }, [theme, countdownInterval]);\n\n  // When a city is selected, fetch its prayer times\n  useEffect(() => {\n    if (selectedCity && selectedCity.id) {\n      fetchPrayerTimesForCity(selectedCity.id);\n    }\n  }, [selectedCity, fetchPrayerTimesForCity]);  // Added fetchPrayerTimesForCity to dependencies\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Handle form submission completion\n  const handlePrayerAdded = () => {\n    setShowForm(false); // Hide the form\n  };\n\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  if (loading && !selectedCity) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loader\"></div>\n        <p>Loading prayer times...</p>\n      </div>\n    );\n  }\n\n  if (error && !prayers) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()} className=\"refresh-btn\">Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`app-container ${theme}`}>\n      <header>\n        <h1>Ramadan Prayer Times</h1>\n        <div className=\"header-actions\">\n          <button onClick={toggleForm} className=\"form-toggle-btn\">\n            {showForm ? \"Hide Form\" : \"Add Prayer Times\"}\n          </button>\n          <button onClick={toggleTheme} className=\"theme-btn\">\n            {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </button>\n        </div>\n      </header>\n      \n      {/* City Selector */}\n      <div className=\"city-selector-container\">\n        <CitySelector \n          onSelectCity={setSelectedCity} \n          selectedCity={selectedCity} \n        />\n      </div>\n      \n      {/* Prayer Form */}\n      {showForm && (\n        <div className=\"form-section\">\n          <PrayerForm\n            onPrayerAdded={handlePrayerAdded}\n            onCancel={() => setShowForm(false)}\n          />\n        </div>\n      )}\n      \n      {/* Loading Indicator */}\n      {loading && selectedCity && (\n        <div className=\"inline-loading\">\n          <div className=\"loader small\"></div>\n          <p>Loading prayer times...</p>\n        </div>\n      )}\n      \n      {/* Error Display */}\n      {error && prayers && (\n        <div className=\"inline-error\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {prayers && !loading && (\n        <div className=\"content\">\n          <div className=\"location-info\">\n            <h2>{prayers.city}, {prayers.country}</h2>\n            <p className=\"date\">{new Date().toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>\n          </div>\n          \n          <div className=\"iftar-countdown\">\n            <h2>Time until Iftar</h2>\n            <div className=\"countdown-display\">{timeLeft}</div>\n          </div>\n          \n          <div className=\"prayer-times-container\">\n            <h2>Prayer Times</h2>\n            <div className=\"prayer-times\">\n              {prayers.prayers && (\n                Object.entries(prayers.prayers).map(([name, time]) => (\n                  <div key={name} className={`prayer-time-card ${name === activeTime ? \"active\" : \"\"}`}>\n                    <div className=\"prayer-name\">{name}</div>\n                    <div className=\"prayer-time\">{time}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          <footer>\n            <p>Ramadan Mubarak! 🌙</p>\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}