{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\CitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitySelector({\n  onSelectCity,\n  selectedCity\n}) {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchCities();\n  }, []);\n  const fetchCities = () => {\n    setLoading(true);\n    setError(null);\n    fetch(\"http://localhost:5000/api/cities\").then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch cities');\n      }\n      return res.json();\n    }).then(data => {\n      if (Array.isArray(data)) {\n        setCities(data);\n        // Auto-select the first city if none is selected\n        if (!selectedCity && data.length > 0) {\n          onSelectCity(data[0]);\n        }\n      } else {\n        throw new Error(\"Invalid data format received\");\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n      setLoading(false);\n    });\n  };\n  const handleCityChange = e => {\n    const cityId = parseInt(e.target.value);\n    const city = cities.find(c => c.id === cityId);\n    if (city) {\n      onSelectCity(city);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-loading\",\n      children: \"Loading cities...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selector-error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n  if (cities.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-cities\",\n      children: \"No cities available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.id) || \"\",\n      onChange: handleCityChange,\n      className: \"city-select\",\n      children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.id,\n        children: [city.city, \", \", city.country]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCities,\n      className: \"refresh-cities-btn\",\n      title: \"Refresh cities list\",\n      children: \"\\uD83D\\uDD04\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(CitySelector, \"bTCjBbd/fs6gkjBo3Ih/WlV0+58=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CitySelector","onSelectCity","selectedCity","_s","cities","setCities","loading","setLoading","error","setError","fetchCities","fetch","then","res","ok","Error","json","data","Array","isArray","length","catch","err","console","message","handleCityChange","e","cityId","parseInt","target","value","city","find","c","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","country","onClick","title","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/CitySelector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction CitySelector({ onSelectCity, selectedCity }) {\r\n  const [cities, setCities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const fetchCities = () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    fetch(\"http://localhost:5000/api/cities\")\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          throw new Error('Failed to fetch cities');\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        if (Array.isArray(data)) {\r\n          setCities(data);\r\n          // Auto-select the first city if none is selected\r\n          if (!selectedCity && data.length > 0) {\r\n            onSelectCity(data[0]);\r\n          }\r\n        } else {\r\n          throw new Error(\"Invalid data format received\");\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"API Error:\", err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleCityChange = (e) => {\r\n    const cityId = parseInt(e.target.value);\r\n    const city = cities.find(c => c.id === cityId);\r\n    \r\n    if (city) {\r\n      onSelectCity(city);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"selector-loading\">Loading cities...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"selector-error\">Error: {error}</div>;\r\n  }\r\n\r\n  if (cities.length === 0) {\r\n    return <div className=\"no-cities\">No cities available</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"city-selector\">\r\n      <select \r\n        value={selectedCity?.id || \"\"} \r\n        onChange={handleCityChange}\r\n        className=\"city-select\"\r\n      >\r\n        {cities.map(city => (\r\n          <option key={city.id} value={city.id}>\r\n            {city.city}, {city.country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button \r\n        onClick={fetchCities} \r\n        className=\"refresh-cities-btn\"\r\n        title=\"Refresh cities list\"\r\n      >\r\n        ðŸ”„\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitySelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}