{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\nimport CitySelector from \"./CitySelector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countdownInterval, setCountdownInterval] = useState(null);\n\n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = timeString => {\n    if (!timeString) return \"\";\n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    return timeString;\n  };\n  const determineActiveTime = prayerTimes => {\n    if (!prayerTimes) return;\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    let nextPrayer = null;\n    let minDiff = Infinity;\n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      const prayerTime = hour * 60 + minute;\n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    setActiveTime(nextPrayer);\n  };\n  const startCountdown = iftarTime => {\n    if (!iftarTime) return null;\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      iftar.setHours(hour, minute, 0, 0);\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff / (1000 * 60) % 60);\n        const seconds = Math.floor(diff / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    return interval;\n  };\n  const fetchPrayerTimesForCity = useCallback(cityId => {\n    setLoading(true);\n    setError(null);\n\n    // Clear previous countdown\n    if (countdownInterval) {\n      clearInterval(countdownInterval);\n      setCountdownInterval(null);\n    }\n    fetch(`http://localhost:5000/api/prayers/${cityId}`).then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times');\n      }\n      return res.json();\n    }).then(prayerData => {\n      // Rest of the function\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [countdownInterval]);\n  useEffect(() => {\n    document.body.className = theme;\n    return () => {\n      document.body.className = \"\";\n      if (countdownInterval) {\n        clearInterval(countdownInterval);\n      }\n    };\n  }, [theme, countdownInterval]);\n\n  // When a city is selected, fetch its prayer times\n  useEffect(() => {\n    if (selectedCity && selectedCity.id) {\n      fetchPrayerTimesForCity(selectedCity.id);\n    }\n  }, [selectedCity, fetchPrayerTimesForCity]); // Added fetchPrayerTimesForCity to dependencies\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Handle form submission completion\n  const handlePrayerAdded = () => {\n    setShowForm(false); // Hide the form\n  };\n\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n  if (loading && !selectedCity) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !prayers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"refresh-btn\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ramadan Prayer Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleForm,\n          className: \"form-toggle-btn\",\n          children: showForm ? \"Hide Form\" : \"Add Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-btn\",\n          children: theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-selector-container\",\n      children: /*#__PURE__*/_jsxDEV(CitySelector, {\n        onSelectCity: setSelectedCity,\n        selectedCity: selectedCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: /*#__PURE__*/_jsxDEV(PrayerForm, {\n        onPrayerAdded: handlePrayerAdded,\n        onCancel: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), loading && selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), error && prayers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inline-error\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), prayers && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [prayers.city, \", \", prayers.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iftar-countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Time until Iftar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-display\",\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prayer-times-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prayer-times\",\n          children: prayers.prayers && Object.entries(prayers.prayers).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `prayer-time-card ${name === activeTime ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-time\",\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ramadan Mubarak! \\uD83C\\uDF19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Tno7Q/nlRE17le6PUgyGXSy8l8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","PrayerForm","CitySelector","jsxDEV","_jsxDEV","App","_s","prayers","setPrayers","timeLeft","setTimeLeft","activeTime","setActiveTime","loading","setLoading","error","setError","theme","setTheme","showForm","setShowForm","selectedCity","setSelectedCity","countdownInterval","setCountdownInterval","formatTime","timeString","includes","parts","split","length","determineActiveTime","prayerTimes","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","nextPrayer","minDiff","Infinity","name","time","Object","entries","hour","minute","map","Number","isNaN","prayerTime","diff","startCountdown","iftarTime","interval","setInterval","iftar","clearInterval","setHours","hours","Math","floor","minutes","seconds","fetchPrayerTimesForCity","useCallback","cityId","fetch","then","res","ok","Error","json","prayerData","catch","err","console","message","finally","document","body","className","id","toggleTheme","handlePrayerAdded","toggleForm","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","onSelectCity","onPrayerAdded","onCancel","city","country","toLocaleDateString","weekday","year","month","day","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport PrayerForm from \"./PrayerForm\";\nimport CitySelector from \"./CitySelector\";\n\nfunction App() {\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [showForm, setShowForm] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [countdownInterval, setCountdownInterval] = useState(null);\n\n  // Format time from \"HH:MM:SS\" to \"HH:MM\"\n  const formatTime = (timeString) => {\n    if (!timeString) return \"\";\n    \n    if (timeString.includes(\":\")) {\n      const parts = timeString.split(\":\");\n      if (parts.length >= 2) {\n        return `${parts[0]}:${parts[1]}`;\n      }\n    }\n    \n    return timeString;\n  };\n\n  const determineActiveTime = (prayerTimes) => {\n    if (!prayerTimes) return;\n    \n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    \n    let nextPrayer = null;\n    let minDiff = Infinity;\n    \n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      \n      const parts = time.split(\":\");\n      if (parts.length < 2) continue;\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      \n      const prayerTime = hour * 60 + minute;\n      \n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60;\n      }\n      \n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    \n    setActiveTime(nextPrayer);\n  };\n\n  const startCountdown = (iftarTime) => {\n    if (!iftarTime) return null;\n    \n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      \n      const parts = iftarTime.split(\":\");\n      if (parts.length < 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      \n      iftar.setHours(hour, minute, 0, 0);\n\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor((diff / (1000 * 60)) % 60);\n        const seconds = Math.floor((diff / 1000) % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    \n    return interval;\n  };\n\n  const fetchPrayerTimesForCity = useCallback((cityId) => {\n  setLoading(true);\n  setError(null);\n  \n  // Clear previous countdown\n  if (countdownInterval) {\n    clearInterval(countdownInterval);\n    setCountdownInterval(null);\n  }\n  \n  fetch(`http://localhost:5000/api/prayers/${cityId}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times');\n      }\n      return res.json();\n    })\n    .then(prayerData => {\n      // Rest of the function\n    })\n    .catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n    })\n    .finally(() => {\n      setLoading(false);\n    });\n}, [countdownInterval]);\n\n  useEffect(() => {\n    document.body.className = theme;\n    \n    return () => {\n      document.body.className = \"\";\n      if (countdownInterval) {\n        clearInterval(countdownInterval);\n      }\n    };\n  }, [theme, countdownInterval]);\n\n  // When a city is selected, fetch its prayer times\n  useEffect(() => {\n    if (selectedCity && selectedCity.id) {\n      fetchPrayerTimesForCity(selectedCity.id);\n    }\n  }, [selectedCity, fetchPrayerTimesForCity]);  // Added fetchPrayerTimesForCity to dependencies\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  // Handle form submission completion\n  const handlePrayerAdded = () => {\n    setShowForm(false); // Hide the form\n  };\n\n  // Toggle form visibility\n  const toggleForm = () => {\n    setShowForm(!showForm);\n  };\n\n  if (loading && !selectedCity) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loader\"></div>\n        <p>Loading prayer times...</p>\n      </div>\n    );\n  }\n\n  if (error && !prayers) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()} className=\"refresh-btn\">Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`app-container ${theme}`}>\n      <header>\n        <h1>Ramadan Prayer Times</h1>\n        <div className=\"header-actions\">\n          <button onClick={toggleForm} className=\"form-toggle-btn\">\n            {showForm ? \"Hide Form\" : \"Add Prayer Times\"}\n          </button>\n          <button onClick={toggleTheme} className=\"theme-btn\">\n            {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </button>\n        </div>\n      </header>\n      \n      {/* City Selector */}\n      <div className=\"city-selector-container\">\n        <CitySelector \n          onSelectCity={setSelectedCity} \n          selectedCity={selectedCity} \n        />\n      </div>\n      \n      {/* Prayer Form */}\n      {showForm && (\n        <div className=\"form-section\">\n          <PrayerForm\n            onPrayerAdded={handlePrayerAdded}\n            onCancel={() => setShowForm(false)}\n          />\n        </div>\n      )}\n      \n      {/* Loading Indicator */}\n      {loading && selectedCity && (\n        <div className=\"inline-loading\">\n          <div className=\"loader small\"></div>\n          <p>Loading prayer times...</p>\n        </div>\n      )}\n      \n      {/* Error Display */}\n      {error && prayers && (\n        <div className=\"inline-error\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {prayers && !loading && (\n        <div className=\"content\">\n          <div className=\"location-info\">\n            <h2>{prayers.city}, {prayers.country}</h2>\n            <p className=\"date\">{new Date().toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>\n          </div>\n          \n          <div className=\"iftar-countdown\">\n            <h2>Time until Iftar</h2>\n            <div className=\"countdown-display\">{timeLeft}</div>\n          </div>\n          \n          <div className=\"prayer-times-container\">\n            <h2>Prayer Times</h2>\n            <div className=\"prayer-times\">\n              {prayers.prayers && (\n                Object.entries(prayers.prayers).map(([name, time]) => (\n                  <div key={name} className={`prayer-time-card ${name === activeTime ? \"active\" : \"\"}`}>\n                    <div className=\"prayer-name\">{name}</div>\n                    <div className=\"prayer-time\">{time}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          <footer>\n            <p>Ramadan Mubarak! 🌙</p>\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}