{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\"; // We'll create this file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [debugInfo, setDebugInfo] = useState(null);\n  useEffect(() => {\n    fetchPrayerTimes();\n\n    // Apply theme class to body\n    document.body.className = theme;\n    return () => {\n      document.body.className = \"\";\n    };\n  }, [theme]);\n  const fetchPrayerTimes = () => {\n    setLoading(true);\n    setError(null);\n    setDebugInfo(null);\n\n    // Create hardcoded data as fallback\n    const hardcodedData = {\n      city: \"Mecca\",\n      country: \"Saudi Arabia\",\n      prayers: {\n        Fajr: \"04:35\",\n        Sunrise: \"06:00\",\n        Dhuhr: \"12:15\",\n        Asr: \"15:30\",\n        Maghrib: \"18:32\",\n        Isha: \"19:45\"\n      }\n    };\n    fetch(\"http://localhost:5000/api/prayers\").then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch prayer times');\n      }\n      return res.json();\n    }).then(data => {\n      // Save raw data for debugging\n      setDebugInfo({\n        rawData: JSON.stringify(data, null, 2),\n        type: typeof data,\n        isArray: Array.isArray(data),\n        keys: data ? Object.keys(data) : []\n      });\n\n      // Try to use the API data if it looks valid\n      if (data) {\n        if (typeof data === 'object' && data.prayers) {\n          setPrayers(data);\n          if (data.prayers.Maghrib) {\n            startCountdown(data.prayers.Maghrib);\n            determineActiveTime(data.prayers);\n          }\n        } else {\n          // Use hardcoded data as fallback\n          console.log(\"Using hardcoded data due to unexpected API format\", data);\n          setPrayers(hardcodedData);\n          startCountdown(hardcodedData.prayers.Maghrib);\n          determineActiveTime(hardcodedData.prayers);\n        }\n      } else {\n        throw new Error(\"Empty response from API\");\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n\n      // Always fall back to hardcoded data on errors\n      console.log(\"Using hardcoded data due to API error\");\n      setPrayers(hardcodedData);\n      startCountdown(hardcodedData.prayers.Maghrib);\n      determineActiveTime(hardcodedData.prayers);\n      setLoading(false);\n    });\n  };\n  const determineActiveTime = prayerTimes => {\n    if (!prayerTimes) return;\n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    let nextPrayer = null;\n    let minDiff = Infinity;\n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      const parts = time.split(\":\");\n      if (parts.length !== 2) continue;\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      const prayerTime = hour * 60 + minute;\n\n      // Find the next prayer time\n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60; // Add 24 hours if prayer time has passed today\n      }\n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    setActiveTime(nextPrayer);\n  };\n  const startCountdown = iftarTime => {\n    if (!iftarTime) return;\n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      const parts = iftarTime.split(\":\");\n      if (parts.length !== 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      iftar.setHours(hour, minute, 0, 0);\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor(diff / (1000 * 60) % 60);\n        const seconds = Math.floor(diff / 1000 % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  };\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  const refreshData = () => {\n    fetchPrayerTimes();\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading prayer times...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !prayers) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: refreshData,\n        className: \"refresh-btn\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data Type: \", debugInfo.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Is Array: \", debugInfo.isArray ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available Keys: \", debugInfo.keys.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Raw Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: debugInfo.rawData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ramadan Prayer Times\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          className: \"refresh-btn\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleTheme,\n          className: \"theme-btn\",\n          children: theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), prayers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [prayers.city || 'Unknown', \", \", prayers.country || 'Location']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"date\",\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"iftar-countdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Time until Iftar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-display\",\n          children: timeLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning-banner\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Using backup data due to API error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prayer-times-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prayer Times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prayer-times\",\n          children: prayers && prayers.prayers && Object.entries(prayers.prayers).map(([name, time]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `prayer-time-card ${name === activeTime ? \"active\" : \"\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-name\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prayer-time\",\n              children: time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 21\n            }, this)]\n          }, name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Debug Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Data Type: \", debugInfo.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Is Array: \", debugInfo.isArray ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Available Keys: \", debugInfo.keys.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n            children: \"Raw Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: debugInfo.rawData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ramadan Mubarak! \\uD83C\\uDF19\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0Jg6LSbSpeyaqdBViWynsL8+twg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","prayers","setPrayers","timeLeft","setTimeLeft","activeTime","setActiveTime","loading","setLoading","error","setError","theme","setTheme","debugInfo","setDebugInfo","fetchPrayerTimes","document","body","className","hardcodedData","city","country","Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha","fetch","then","res","ok","Error","json","data","rawData","JSON","stringify","type","isArray","Array","keys","Object","startCountdown","determineActiveTime","console","log","catch","err","message","prayerTimes","now","Date","currentHour","getHours","currentMinute","getMinutes","currentTime","nextPrayer","minDiff","Infinity","name","time","entries","parts","split","length","hour","minute","map","Number","isNaN","prayerTime","diff","iftarTime","interval","setInterval","iftar","clearInterval","setHours","hours","Math","floor","minutes","seconds","toggleTheme","refreshData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","join","toLocaleDateString","weekday","year","month","day","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\"; // We'll create this file for styling\n\nfunction App() {\n  const [prayers, setPrayers] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(\"\");\n  const [activeTime, setActiveTime] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [theme, setTheme] = useState(\"light\");\n  const [debugInfo, setDebugInfo] = useState(null);\n\n  useEffect(() => {\n    fetchPrayerTimes();\n    \n    // Apply theme class to body\n    document.body.className = theme;\n    \n    return () => {\n      document.body.className = \"\";\n    };\n  }, [theme]);\n  \n  const fetchPrayerTimes = () => {\n    setLoading(true);\n    setError(null);\n    setDebugInfo(null);\n    \n    // Create hardcoded data as fallback\n    const hardcodedData = {\n      city: \"Mecca\",\n      country: \"Saudi Arabia\",\n      prayers: {\n        Fajr: \"04:35\",\n        Sunrise: \"06:00\",\n        Dhuhr: \"12:15\",\n        Asr: \"15:30\",\n        Maghrib: \"18:32\",\n        Isha: \"19:45\"\n      }\n    };\n    \n    fetch(\"http://localhost:5000/api/prayers\")\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Failed to fetch prayer times');\n        }\n        return res.json();\n      })\n      .then(data => {\n        // Save raw data for debugging\n        setDebugInfo({\n          rawData: JSON.stringify(data, null, 2),\n          type: typeof data,\n          isArray: Array.isArray(data),\n          keys: data ? Object.keys(data) : []\n        });\n        \n        // Try to use the API data if it looks valid\n        if (data) {\n          if (typeof data === 'object' && data.prayers) {\n            setPrayers(data);\n            if (data.prayers.Maghrib) {\n              startCountdown(data.prayers.Maghrib);\n              determineActiveTime(data.prayers);\n            }\n          } else {\n            // Use hardcoded data as fallback\n            console.log(\"Using hardcoded data due to unexpected API format\", data);\n            setPrayers(hardcodedData);\n            startCountdown(hardcodedData.prayers.Maghrib);\n            determineActiveTime(hardcodedData.prayers);\n          }\n        } else {\n          throw new Error(\"Empty response from API\");\n        }\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error(\"API Error:\", err);\n        setError(err.message);\n        \n        // Always fall back to hardcoded data on errors\n        console.log(\"Using hardcoded data due to API error\");\n        setPrayers(hardcodedData);\n        startCountdown(hardcodedData.prayers.Maghrib);\n        determineActiveTime(hardcodedData.prayers);\n        setLoading(false);\n      });\n  };\n\n  const determineActiveTime = (prayerTimes) => {\n    if (!prayerTimes) return;\n    \n    const now = new Date();\n    const currentHour = now.getHours();\n    const currentMinute = now.getMinutes();\n    const currentTime = currentHour * 60 + currentMinute;\n    \n    let nextPrayer = null;\n    let minDiff = Infinity;\n    \n    for (const [name, time] of Object.entries(prayerTimes)) {\n      if (!time || typeof time !== 'string') continue;\n      \n      const parts = time.split(\":\");\n      if (parts.length !== 2) continue;\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) continue;\n      \n      const prayerTime = hour * 60 + minute;\n      \n      // Find the next prayer time\n      let diff = prayerTime - currentTime;\n      if (diff < 0) {\n        diff += 24 * 60; // Add 24 hours if prayer time has passed today\n      }\n      \n      if (diff < minDiff) {\n        minDiff = diff;\n        nextPrayer = name;\n      }\n    }\n    \n    setActiveTime(nextPrayer);\n  };\n\n  const startCountdown = (iftarTime) => {\n    if (!iftarTime) return;\n    \n    const interval = setInterval(() => {\n      const now = new Date();\n      const iftar = new Date();\n      \n      const parts = iftarTime.split(\":\");\n      if (parts.length !== 2) {\n        setTimeLeft(\"Invalid time format\");\n        clearInterval(interval);\n        return;\n      }\n      \n      const [hour, minute] = parts.map(Number);\n      if (isNaN(hour) || isNaN(minute)) {\n        setTimeLeft(\"Invalid time values\");\n        clearInterval(interval);\n        return;\n      }\n      \n      iftar.setHours(hour, minute, 0, 0);\n\n      const diff = iftar - now;\n      if (diff <= 0) {\n        setTimeLeft(\"Iftar time!\");\n        clearInterval(interval);\n      } else {\n        const hours = Math.floor(diff / (1000 * 60 * 60));\n        const minutes = Math.floor((diff / (1000 * 60)) % 60);\n        const seconds = Math.floor((diff / 1000) % 60);\n        setTimeLeft(`${hours}h ${minutes}m ${seconds}s`);\n      }\n    }, 1000);\n    \n    return () => clearInterval(interval);\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const refreshData = () => {\n    fetchPrayerTimes();\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loader\"></div>\n        <p>Loading prayer times...</p>\n      </div>\n    );\n  }\n\n  if (error && !prayers) {\n    return (\n      <div className=\"error-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={refreshData} className=\"refresh-btn\">Try Again</button>\n        \n        {debugInfo && (\n          <div className=\"debug-section\">\n            <h3>Debug Information</h3>\n            <p>Data Type: {debugInfo.type}</p>\n            <p>Is Array: {debugInfo.isArray ? \"Yes\" : \"No\"}</p>\n            <p>Available Keys: {debugInfo.keys.join(\", \")}</p>\n            <details>\n              <summary>Raw Data</summary>\n              <pre>{debugInfo.rawData}</pre>\n            </details>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`app-container ${theme}`}>\n      <header>\n        <h1>Ramadan Prayer Times</h1>\n        <div className=\"header-actions\">\n          <button onClick={refreshData} className=\"refresh-btn\">Refresh</button>\n          <button onClick={toggleTheme} className=\"theme-btn\">\n            {theme === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\n          </button>\n        </div>\n      </header>\n      \n      {prayers && (\n        <div className=\"content\">\n          <div className=\"location-info\">\n            <h2>{prayers.city || 'Unknown'}, {prayers.country || 'Location'}</h2>\n            <p className=\"date\">{new Date().toLocaleDateString(\"en-US\", { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>\n          </div>\n          \n          <div className=\"iftar-countdown\">\n            <h2>Time until Iftar</h2>\n            <div className=\"countdown-display\">{timeLeft}</div>\n          </div>\n          \n          {error && (\n            <div className=\"warning-banner\">\n              <p>Using backup data due to API error: {error}</p>\n            </div>\n          )}\n          \n          <div className=\"prayer-times-container\">\n            <h2>Prayer Times</h2>\n            <div className=\"prayer-times\">\n              {prayers && prayers.prayers && (\n                Object.entries(prayers.prayers).map(([name, time]) => (\n                  <div key={name} className={`prayer-time-card ${name === activeTime ? \"active\" : \"\"}`}>\n                    <div className=\"prayer-name\">{name}</div>\n                    <div className=\"prayer-time\">{time}</div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n          \n          {debugInfo && (\n            <div className=\"debug-section\">\n              <h3>Debug Information</h3>\n              <p>Data Type: {debugInfo.type}</p>\n              <p>Is Array: {debugInfo.isArray ? \"Yes\" : \"No\"}</p>\n              <p>Available Keys: {debugInfo.keys.join(\", \")}</p>\n              <details>\n                <summary>Raw Data</summary>\n                <pre>{debugInfo.rawData}</pre>\n              </details>\n            </div>\n          )}\n          \n          <footer>\n            <p>Ramadan Mubarak! 🌙</p>\n          </footer>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}