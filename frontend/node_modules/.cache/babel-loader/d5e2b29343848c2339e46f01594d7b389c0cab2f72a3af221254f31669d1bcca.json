{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus VivoBook F1605P\\\\Desktop\\\\projet_k8s\\\\mongo-express-app\\\\frontend\\\\src\\\\CitySelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitySelector({\n  onSelectCity,\n  selectedCity\n}) {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchCities = () => {\n    setLoading(true);\n    fetch(\"http://localhost:5000/api/cities\").then(res => {\n      if (!res.ok) {\n        throw new Error(\"Failed to fetch cities\");\n      }\n      return res.json();\n    }).then(citiesData => {\n      setCities(citiesData);\n      if (citiesData.length > 0 && !selectedCity) {\n        onSelectCity(citiesData[0]);\n      }\n    }).catch(err => {\n      console.error(\"API Error:\", err);\n      setError(err.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchCities();\n  }, [selectedCity, onSelectCity]); // Add relevant dependencies\n\n  const handleCityChange = e => {\n    const cityId = e.target.value;\n    const city = cities.find(c => c.id === parseInt(cityId, 10) || c.id === cityId);\n    if (city) {\n      onSelectCity(city);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-loading\",\n      children: \"Loading cities...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city-select\",\n      children: \"Select City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"city-select\",\n      value: (selectedCity === null || selectedCity === void 0 ? void 0 : selectedCity.id) || \"\",\n      onChange: handleCityChange,\n      children: cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city.id,\n        children: [city.name, \", \", city.country]\n      }, city.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(CitySelector, \"bTCjBbd/fs6gkjBo3Ih/WlV0+58=\");\n_c = CitySelector;\nexport default CitySelector;\nvar _c;\n$RefreshReg$(_c, \"CitySelector\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CitySelector","onSelectCity","selectedCity","_s","cities","setCities","loading","setLoading","error","setError","fetchCities","fetch","then","res","ok","Error","json","citiesData","length","catch","err","console","message","finally","handleCityChange","e","cityId","target","value","city","find","c","id","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","name","country","_c","$RefreshReg$"],"sources":["C:/Users/Asus VivoBook F1605P/Desktop/projet_k8s/mongo-express-app/frontend/src/CitySelector.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nfunction CitySelector({ onSelectCity, selectedCity }) {\r\n  const [cities, setCities] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCities = () => {\r\n    setLoading(true);\r\n    fetch(\"http://localhost:5000/api/cities\")\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch cities\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((citiesData) => {\r\n        setCities(citiesData);\r\n        if (citiesData.length > 0 && !selectedCity) {\r\n          onSelectCity(citiesData[0]);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"API Error:\", err);\r\n        setError(err.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCities();\r\n  }, [selectedCity, onSelectCity]); // Add relevant dependencies\r\n\r\n  const handleCityChange = (e) => {\r\n    const cityId = e.target.value;\r\n    const city = cities.find((c) => c.id === parseInt(cityId, 10) || c.id === cityId);\r\n    if (city) {\r\n      onSelectCity(city);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"city-loading\">Loading cities...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"city-error\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"city-selector\">\r\n      <label htmlFor=\"city-select\">Select City:</label>\r\n      <select\r\n        id=\"city-select\"\r\n        value={selectedCity?.id || \"\"}\r\n        onChange={handleCityChange}\r\n      >\r\n        {cities.map((city) => (\r\n          <option key={city.id} value={city.id}>\r\n            {city.name}, {city.country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitySelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}